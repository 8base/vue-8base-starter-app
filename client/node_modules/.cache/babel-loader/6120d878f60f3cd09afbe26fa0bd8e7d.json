{"remainingRequest":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/babel-loader/lib/index.js!/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/sebastian/Code/8base/vuejs-todos-app/src/modules/session.js","dependencies":[{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/src/modules/session.js","mtime":1567458717980},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport auth from '@/utils/auth.js';\nimport * as gql from '@/utils/api';\nimport graphqlClient from '@/utils/graphql';\nvar AUTH_PROFILE_ID = 'cjz1n3hw700ae01mlhe4tfepw';\nvar state = {\n  authenticated: !!localStorage.getItem('id_token'),\n  idToken: localStorage.getItem('id_token')\n};\nvar getters = {\n  authenticated: function authenticated(state) {\n    return state.authenticated;\n  },\n  token: function token(state) {\n    return state.accessToken;\n  }\n};\nvar mutations = {\n  authenticated: function authenticated(state, authData) {\n    state.authenticated = true;\n    state.idToken = authData.idToken;\n    localStorage.setItem('id_token', state.idToken);\n  },\n  logout: function logout(state) {\n    state.authenticated = false;\n    state.idToken = false;\n    localStorage.removeItem('id_token');\n  }\n};\nvar actions = {\n  login: function login() {\n    auth.authorize();\n  },\n  logout: function logout(_ref) {\n    var commit = _ref.commit;\n    commit('logout');\n  },\n  handleAuthentication: function () {\n    var _handleAuthentication = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref2) {\n      var commit, authResult, context;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context.next = 3;\n              return auth.getAuthorizedData();\n\n            case 3:\n              authResult = _context.sent;\n              context = {\n                headers: {\n                  authorization: \"Bearer \".concat(authResult.idToken)\n                }\n              }; // Check if user exists, if not it'll return an error\n\n              _context.prev = 5;\n              _context.next = 8;\n              return graphqlClient.query({\n                query: gql.CURRENT_USER_QUERY,\n                context: context\n              });\n\n            case 8:\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](5);\n              graphqlClient.mutate({\n                mutation: gql.USER_SIGN_UP_MUTATION,\n                variables: {\n                  user: {\n                    email: authResult.email\n                  },\n                  authProfileId: AUTH_PROFILE_ID\n                },\n                context: context\n              });\n\n            case 13:\n              commit('authenticated', authResult);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 10]]);\n    }));\n\n    function handleAuthentication(_x) {\n      return _handleAuthentication.apply(this, arguments);\n    }\n\n    return handleAuthentication;\n  }()\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/sebastian/Code/8base/vuejs-todos-app/src/modules/session.js"],"names":["auth","gql","graphqlClient","AUTH_PROFILE_ID","state","authenticated","localStorage","getItem","idToken","getters","token","accessToken","mutations","authData","setItem","logout","removeItem","actions","login","authorize","commit","handleAuthentication","getAuthorizedData","authResult","context","headers","authorization","query","CURRENT_USER_QUERY","mutate","mutation","USER_SIGN_UP_MUTATION","variables","user","email","authProfileId"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAMC,eAAe,GAAG,2BAAxB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,aAAa,EAAE,CAAC,CAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,CADL;AAEZC,EAAAA,OAAO,EAAEF,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFG,CAAd;AAKA,IAAME,OAAO,GAAG;AACdJ,EAAAA,aADc,yBACCD,KADD,EACQ;AACpB,WAAOA,KAAK,CAACC,aAAb;AACD,GAHa;AAKdK,EAAAA,KALc,iBAKPN,KALO,EAKA;AACZ,WAAOA,KAAK,CAACO,WAAb;AACD;AAPa,CAAhB;AAUA,IAAMC,SAAS,GAAG;AAChBP,EAAAA,aADgB,yBACDD,KADC,EACMS,QADN,EACgB;AAC9BT,IAAAA,KAAK,CAACC,aAAN,GAAsB,IAAtB;AACAD,IAAAA,KAAK,CAACI,OAAN,GAAgBK,QAAQ,CAACL,OAAzB;AAEAF,IAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCV,KAAK,CAACI,OAAvC;AACD,GANe;AAQhBO,EAAAA,MARgB,kBAQRX,KARQ,EAQD;AACbA,IAAAA,KAAK,CAACC,aAAN,GAAsB,KAAtB;AACAD,IAAAA,KAAK,CAACI,OAAN,GAAgB,KAAhB;AAEAF,IAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACD;AAbe,CAAlB;AAgBA,IAAMC,OAAO,GAAG;AACdC,EAAAA,KADc,mBACN;AACNlB,IAAAA,IAAI,CAACmB,SAAL;AACD,GAHa;AAKdJ,EAAAA,MALc,wBAKK;AAAA,QAAVK,MAAU,QAAVA,MAAU;AACjBA,IAAAA,MAAM,CAAC,QAAD,CAAN;AACD,GAPa;AASRC,EAAAA,oBATQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASeD,cAAAA,MATf,SASeA,MATf;AAAA;AAAA,qBAUapB,IAAI,CAACsB,iBAAL,EAVb;;AAAA;AAUNC,cAAAA,UAVM;AAYNC,cAAAA,OAZM,GAYI;AACdC,gBAAAA,OAAO,EAAE;AAAEC,kBAAAA,aAAa,mBAAYH,UAAU,CAACf,OAAvB;AAAf;AADK,eAZJ,EAeZ;;AAfY;AAAA;AAAA,qBAiBJN,aAAa,CAACyB,KAAd,CAAoB;AACxBA,gBAAAA,KAAK,EAAE1B,GAAG,CAAC2B,kBADa;AAExBJ,gBAAAA,OAAO,EAAPA;AAFwB,eAApB,CAjBI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsBVtB,cAAAA,aAAa,CAAC2B,MAAd,CAAqB;AACnBC,gBAAAA,QAAQ,EAAE7B,GAAG,CAAC8B,qBADK;AAEnBC,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,IAAI,EAAE;AAAEC,oBAAAA,KAAK,EAAEX,UAAU,CAACW;AAApB,mBADG;AAETC,kBAAAA,aAAa,EAAEhC;AAFN,iBAFQ;AAMnBqB,gBAAAA,OAAO,EAAPA;AANmB,eAArB;;AAtBU;AA+BZJ,cAAAA,MAAM,CAAC,eAAD,EAAkBG,UAAlB,CAAN;;AA/BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AAmCA,eAAe;AACbnB,EAAAA,KAAK,EAALA,KADa;AAEbK,EAAAA,OAAO,EAAPA,OAFa;AAGbG,EAAAA,SAAS,EAATA,SAHa;AAIbK,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import auth from '@/utils/auth.js';\nimport * as gql from '@/utils/api';\nimport graphqlClient from '@/utils/graphql';\n\nconst AUTH_PROFILE_ID = 'cjz1n3hw700ae01mlhe4tfepw';\n\nconst state = {\n  authenticated: !!localStorage.getItem('id_token'),\n  idToken: localStorage.getItem('id_token')\n};\n\nconst getters = {\n  authenticated (state) {\n    return state.authenticated;\n  },\n\n  token (state) {\n    return state.accessToken;\n  }\n};\n\nconst mutations = {\n  authenticated (state, authData) {\n    state.authenticated = true;\n    state.idToken = authData.idToken;\n\n    localStorage.setItem('id_token', state.idToken);\n  },\n\n  logout (state) {\n    state.authenticated = false;\n    state.idToken = false;\n\n    localStorage.removeItem('id_token');\n  }\n};\n\nconst actions = {\n  login() {\n    auth.authorize();\n  },\n\n  logout({ commit }) {\n    commit('logout');\n  },\n\n  async handleAuthentication({ commit }) {\n    const authResult = await auth.getAuthorizedData();\n\n    const context = {\n      headers: { authorization: `Bearer ${authResult.idToken}` }\n    };\n    // Check if user exists, if not it'll return an error\n    try {\n      await graphqlClient.query({\n        query: gql.CURRENT_USER_QUERY,\n        context\n      });\n    } catch {\n      graphqlClient.mutate({\n        mutation: gql.USER_SIGN_UP_MUTATION,\n        variables: {\n          user: { email: authResult.email },\n          authProfileId: AUTH_PROFILE_ID\n        },\n        context\n      });\n    }\n    commit('authenticated', authResult);\n  }\n};\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]}]}