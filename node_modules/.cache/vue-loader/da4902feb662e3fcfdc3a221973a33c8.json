{"remainingRequest":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sebastian/Code/8base/vuejs-todos-app/src/components/BoardCanvas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/src/components/BoardCanvas.vue","mtime":1566853603639},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Board from \"./Board\";\nimport TextEntry from \"./UI/TextEntry\";\n\nexport default {\n  name: \"boardCanvas\",\n  components: {\n    Board,\n    TextEntry\n  },\n\n  props: {\n    boards: Array\n  },\n\n  methods: {\n    addBoard({ text }) {\n      this.$store.dispatch(\"addBoard\", { name: text });\n    },\n\n    deleteBoard({ id }) {\n      this.$store.dispatch(\"deleteBoard\", { boardId: id });\n    }\n  }\n};\n",{"version":3,"sources":["BoardCanvas.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"BoardCanvas.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"boards-container\">\n    <div class=\"canvas\" v-for=\"board in boards\" :key=\"board.id\">\n      <board :board=\"board\" @delete=\"deleteBoard\" />\n    </div>\n    <hr>\n    <div class=\"new-board\">\n      <textEntry placeholder=\"Add a board\" @enter=\"addBoard\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Board from \"./Board\";\nimport TextEntry from \"./UI/TextEntry\";\n\nexport default {\n  name: \"boardCanvas\",\n  components: {\n    Board,\n    TextEntry\n  },\n\n  props: {\n    boards: Array\n  },\n\n  methods: {\n    addBoard({ text }) {\n      this.$store.dispatch(\"addBoard\", { name: text });\n    },\n\n    deleteBoard({ id }) {\n      this.$store.dispatch(\"deleteBoard\", { boardId: id });\n    }\n  }\n};\n</script>\n"]}]}