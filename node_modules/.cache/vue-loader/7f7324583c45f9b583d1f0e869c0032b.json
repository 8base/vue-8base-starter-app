{"remainingRequest":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sebastian/Code/8base/vuejs-todos-app/src/components/Board.vue?vue&type=style&index=0&id=e1ee1034&scoped=true&lang=css&","dependencies":[{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/src/components/Board.vue","mtime":1567789304924},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sebastian/Code/8base/vuejs-todos-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.board {\n  display: inline;\n}\n.delete { \n  margin-left: 10px;\n  display: inline;\n}\n",{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Board.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section class=\"board-container\" ref=\"list\" :data-id=\"board.id\">\n    <hr>\n    <h2 class=\"board\">{{ board.name }}</h2> \n    <button class=\"delete\" @click=\"onDelete\">Delete</button>\n\n    <textEntry\n      placeholder=\"Add a todo\"\n      icon=\"ellipsis-h\"\n      @enter=\"addTodo\"\n    />\n\n    <ul class=\"todos\" v-for=\"todo in board.todos.items\" :key=\"todo.id\">\n      <li><todo :todo=\"todo\" @status=\"updateStatus\" @delete=\"deleteTodo\" /></li>\n    </ul>\n  </section>\n</template>\n\n<script>\nimport Todo from \"./Todo\";\nimport TextEntry from \"./UI/TextEntry\";\n\nexport default {\n  name: 'board',\n  props: {\n    board: Object\n  },\n\n  components: {\n    Todo,\n    TextEntry\n  },\n\n  methods: {\n    addTodo({ text }) {\n      this.$store.dispatch(\"addTodo\", { boardId: this.board.id, description: text });\n    },\n\n    updateStatus({id, status}){\n      this.$store.dispatch(\"updateTodoStatus\", { todoId: id, status: status });\n    },\n\n    deleteTodo({ id }) {\n      this.$store.dispatch(\"deleteTodo\", { todoId: id });\n    },\n\n    onDelete() {\n      this.$emit(\"delete\", { id: this.board.id });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.board {\n  display: inline;\n}\n.delete { \n  margin-left: 10px;\n  display: inline;\n}\n</style>\n"]}]}