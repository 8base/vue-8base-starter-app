import { ParametricSelector } from 'reselect';
import { FieldSchema, TableSchema } from '../types';
export declare const getTableField: (tableField: void | FieldSchema) => FieldSchema;
export declare const getFieldType: any;
export declare const getFieldTypesAttributes: import("reselect").OutputSelector<void | FieldSchema, unknown, (res: FieldSchema) => unknown>;
export declare const isRelationField: import("reselect").OutputSelector<unknown, boolean, (res: "RELATION") => boolean>;
export declare const isMissingRelationField: import("reselect").OutputSelector<unknown, boolean, (res: "MISSING_RELATION") => boolean>;
export declare const isOneWayRelationField: import("reselect").OutputSelector<unknown, boolean, (res: "ONE_WAY_RELATION") => boolean>;
export declare const isFileField: import("reselect").OutputSelector<unknown, boolean, (res: "FILE") => boolean>;
export declare const isSmartField: import("reselect").OutputSelector<unknown, boolean, (res: "SMART") => boolean>;
export declare const isIdField: import("reselect").OutputSelector<unknown, boolean, (res: "ID") => boolean>;
export declare const isMetaField: import("reselect").OutputSelector<void | FieldSchema, boolean, (res: FieldSchema) => boolean>;
export declare const isListField: import("reselect").OutputSelector<void | FieldSchema, boolean, (res: FieldSchema) => boolean>;
export declare const isSystemField: import("reselect").OutputSelector<void | FieldSchema, boolean, (res: FieldSchema) => boolean>;
export declare const getFieldId: import("reselect").OutputSelector<void | FieldSchema, unknown, (res: FieldSchema) => unknown>;
export declare const getFieldName: import("reselect").OutputSelector<void | FieldSchema, string, (res: FieldSchema) => string>;
export declare const getFieldDisplayName: import("reselect").OutputSelector<void | FieldSchema, unknown, (res: FieldSchema) => unknown>;
export declare const getTableId: import("reselect").OutputSelector<void | FieldSchema, any, (res: FieldSchema) => any>;
export declare const getTableName: import("reselect").OutputSelector<void | FieldSchema, any, (res: FieldSchema) => any>;
export declare const getTableDisplayName: import("reselect").OutputSelector<void | FieldSchema, any, (res: FieldSchema) => any>;
export declare const getRelationTableId: ParametricSelector<FieldSchema, void, string>;
export declare const getRelationTableName: ParametricSelector<FieldSchema, void, string>;
export declare const getRelationTableDisplayName: ParametricSelector<FieldSchema, void, string>;
export declare const getSchemaFeatures: import("reselect").OutputSelector<void | FieldSchema, {
    update: boolean;
    delete: boolean;
}, (res: FieldSchema) => {
    update: boolean;
    delete: boolean;
}>;
export declare const getDataFeatures: import("reselect").OutputSelector<void | FieldSchema, {
    create: boolean;
    update: boolean;
}, (res: FieldSchema) => {
    create: boolean;
    update: boolean;
}>;
export declare const getFieldKind: import("reselect").OutputParametricSelector<FieldSchema | (void & FieldSchema), void & TableSchema[], string, (res1: boolean, res2: string, res3: TableSchema[]) => string>;
//# sourceMappingURL=tableFieldSelectors.d.ts.map